name: Rimumugg

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/chechout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: 'adopt'

      - name: excute
        run: chomd +x gradlew
        shell: bash

      - name: build with gradle
        run:
          ./gradlew build
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_OUTPUT_TAG: ${{ github.sha }}
          ECR_REPOSITORY: rimumugg
          SERVICE_TAG: .
          FILE_PATH: .
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_OUTPUT_TAG -f $FILE_PATH $SERVICE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_OUTPUT_TAG
          echo "IMAGE_TAG=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_OUTPUT_TAG" >> $GITHUB_ENV
          echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV